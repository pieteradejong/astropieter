---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Default.astro';
import Tag from '../../components/Tag.astro';

export async function getStaticPaths() {
	const projects = await getCollection('projects');
	return projects.map(project => ({
		params: { slug: project.slug },
		props: project,
	}));
}

const project = Astro.props;
const { title, description, techStack, githubUrl, demoUrl, keyFeatures, technicalHighlights, impact, tags } = project.data;
const { Content } = await project.render();
---

<Layout title={title} description={description}>
	<article class="project-detail">
		<header class="project-header">
			<h1>{title}</h1>
			<p class="description">{description}</p>
			
			<div class="tech-stack">
				{techStack.map((tech) => (
					<Tag text={tech} />
				))}
			</div>

			{(githubUrl || demoUrl) && (
				<div class="project-links">
					{githubUrl && (
						<a href={githubUrl} class="secondary-link" target="_blank" rel="noopener noreferrer">
							View Source Code →
						</a>
					)}
					{demoUrl && (
						<a href={demoUrl} class="secondary-link" target="_blank" rel="noopener noreferrer">
							Live Demo →
						</a>
					)}
				</div>
			)}
		</header>

		<div class="project-content">
			<section class="key-features">
				<h2>Key Features</h2>
				<ul>
					{keyFeatures.map((feature) => (
						<li>{feature}</li>
					))}
				</ul>
			</section>

			<section class="technical-highlights">
				<h2>Technical Highlights</h2>
				<ul>
					{technicalHighlights.map((highlight) => (
						<li>{highlight}</li>
					))}
				</ul>
			</section>

			<section class="impact">
				<h2>Impact</h2>
				<p>{impact}</p>
			</section>

			<div class="content">
				<Content />
			</div>

			<div class="project-tags">
				{tags.map((tag) => (
					<Tag text={tag} />
				))}
			</div>
		</div>
	</article>
</Layout>

<style>
	.project-detail {
		max-width: 800px;
		margin: 0 auto;
		padding: 2rem 1rem;
	}

	.project-header {
		margin-bottom: 2rem;
	}

	.project-header h1 {
		color: var(--non-link-text);
		font-size: 2.5rem;
		margin: 0 0 1rem 0;
	}

	.description {
		color: var(--secondary-text);
		font-size: 1.2rem;
		line-height: 1.6;
		margin: 0 0 1.5rem 0;
	}

	.tech-stack {
		display: flex;
		flex-wrap: wrap;
		gap: 0.5rem;
		margin-bottom: 1.5rem;
	}

	.project-links {
		display: flex;
		gap: 1rem;
		margin-top: 1rem;
	}

	.project-links a {
		display: inline-flex;
		align-items: center;
		gap: 0.25rem;
	}

	.project-content {
		display: flex;
		flex-direction: column;
		gap: 2rem;
	}

	.key-features,
	.technical-highlights,
	.impact {
		background: var(--card-bg);
		border: 1px solid var(--border);
		border-radius: 8px;
		padding: 1.5rem;
	}

	.key-features h2,
	.technical-highlights h2,
	.impact h2 {
		color: var(--non-link-text);
		font-size: 1.5rem;
		margin: 0 0 1rem 0;
	}

	.key-features ul,
	.technical-highlights ul {
		margin: 0;
		padding-left: 1.5rem;
	}

	.key-features li,
	.technical-highlights li {
		margin: 0.5rem 0;
		line-height: 1.5;
		color: var(--secondary-text);
	}

	.impact p {
		margin: 0;
		line-height: 1.6;
		color: var(--secondary-text);
		font-style: italic;
	}

	.content {
		line-height: 1.8;
		color: var(--secondary-text);
	}

	.project-tags {
		display: flex;
		flex-wrap: wrap;
		gap: 0.5rem;
		margin-top: 2rem;
	}

	@media (max-width: 768px) {
		.project-header h1 {
			font-size: 2rem;
		}

		.description {
			font-size: 1.1rem;
		}
		
		.key-features,
		.technical-highlights,
		.impact {
			padding: 1rem;
		}
	}
</style>